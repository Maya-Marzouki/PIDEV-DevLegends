# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    unsplash_access_key: '%env(UNSPLASH_ACCESS_KEY)%'  # ðŸ‘ˆ Bien placÃ© sous `parameters`
    mollie_api_key: '%env(MOLLIE_API_KEY)%'
    paypal.client_id: '%env(PAYPAL_CLIENT_ID)%'
    paypal.secret: '%env(PAYPAL_SECRET)%'
    paypal.mode: '%env(PAYPAL_MODE)%'
    nexmo.api_key: '%env(NEXMO_API_KEY)%'
    nexmo.api_secret: '%env(NEXMO_API_SECRET)%'
    nexmo.brand_name: '%env(NEXMO_BRAND_NAME)%'
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    google_recaptcha_secret_key: '%env(GOOGLE_RECAPTCHA_SECRET)%'


services:
    # Client HTTP Symfony, c'est une implÃ©mentation de HttpClientInterface
    Symfony\Contracts\HttpClient\HttpClientInterface: '@http_client'
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\QuizService:
        public: true

    App\Service\UnsplashService:
        arguments:
            $unsplashAccessKey: '%env(UNSPLASH_ACCESS_KEY)%'

    App\Service\PaypalService:
        arguments:
            $paypalClientId: '%paypal.client_id%'
            $paypalSecret: '%paypal.secret%'
            $paypalMode: '%paypal.mode%'

    # App\Security\AuthMiddleware:
    #     arguments: ['@router', '@session']
    #     tags:
    #         - { name: kernel.event_listener, event: kernel.request }

    # DÃ©finition explicite de MollieService avec son argument
    App\Service\MollieService:
        arguments:
            $mollieApiKey: '%env(MOLLIE_API_KEY)%'
    

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    App\Service\SmsService:
        arguments:
            $nexmoApiKey: '%nexmo.api_key%'
            $nexmoApiSecret: '%nexmo.api_secret%'
            $brandName: '%nexmo.brand_name%'

    App\Service\GeocodingService:
        arguments:
            $httpClient: '@http_client'
            $entityManager: '@doctrine.orm.entity_manager'

    # http_client:
    #     class: Symfony\Contracts\HttpClient\HttpClientInterface
    #     public: true


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
