{% extends 'base.html.twig' %}

{% block title %}
	Liste des Produits
{% endblock %}

{% block body %}

	<div class="container my-5">
		<h1 class="text-center text-success mb-4">Nos Produits</h1>

		<!-- FORMULAIRE DE RECHERCHE -->
		<form method="GET" action="{{ path('produitclient') }}" class="mb-4">
			<div
				class="row">


				<!-- Filtre par catégorie -->
				<div class="col-md-4">
					<select name="categorie" class="form-control">
						<option value="">Toutes les catégories</option>
						{% for categorie in categories %}
							<option value="{{ categorie.id }}" {% if categorie.id == selectedCategorie %} selected {% endif %}>
								{{ categorie.nomCategorie }}
							</option>
						{% endfor %}
					</select>
				</div>

				<!-- Bouton de recherche -->
				<div class="col-md-4">
					<button type="submit" class="btn btn-primary">Rechercher</button>
				</div>
			</div>
		</form>

		<!-- AFFICHAGE DES PRODUITS -->
		<div class="row">
			{% for produit in produits %}
				<div class="col-md-4 mb-4">
					<div class="card shadow-lg border-0 h-100 d-flex flex-column">
						<div class="card-body d-flex flex-column flex-grow-1 text-center">
							<h5 class="card-title text-success">{{ produit.nomProduit }}</h5>
							<div class="mt-auto">
								<p class="card-text">
									<strong>Quantité:</strong>
									<span id="stock-{{ produit.id }}">{{ produit.qteProduit }}</span>
								</p>
								<script>
									function updateStock(productId, newQuantity) {
document.getElementById("stock-" + productId).innerText = newQuantity;
}
								</script>

								<p class="card-text">
									<strong>Prix:</strong>
									{{ produit.prixProduit }}
									€</p>
								<p class="card-text">
									<strong>Statut:</strong>
									<span class="badge bg-{% if produit.statutProduit == 'indisponible' %}danger{% else %}success{% endif %}">
										{{ produit.statutProduit|capitalize }}
									</span>
								</p>
								<p class="card-text">
									<strong>Catégorie:</strong>
									{{ produit.categorieProduit.nomCategorie }}</p>
							</div>

							{% if produit.statutProduit != 'indisponible' %}
								<form action="{{ path('ajouter_au_panier') }}" method="POST">
									<input type="hidden" name="idProduit" value="{{ produit.id }}">
									<input type="hidden" name="nomProduit" value="{{ produit.nomProduit }}">
									<input type="hidden" name="prixProduit" value="{{ produit.prixProduit }}">
									<input type="number" name="quantiteProduit" value="1" min="1">
									<button type="submit" class="btn btn-success">Ajouter au panier</button>
								</form>
                                <script>
    document.querySelectorAll("form[action='{{ path('ajouter_au_panier') }}']").forEach(form => {
        form.addEventListener("submit", function(event) {
            event.preventDefault(); // Empêche le rechargement

            let formData = new FormData(this);
            fetch(this.action, {
                method: "POST",
                body: formData
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      let productId = formData.get("idProduit");
                      fetch(`/produit/stock/${productId}`)
                          .then(response => response.json())
                          .then(stockData => {
                              updateStock(productId, stockData.stock);
                          });
                  }
              });
        });
    });
</script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll("form[action='{{ path('ajouter_au_panier') }}']").forEach(form => {
        let inputQuantite = form.querySelector("input[name='quantiteProduit']");
        let boutonAjouter = form.querySelector("button[type='submit']");
        let stockDisponible = parseInt(form.previousElementSibling.querySelector("span[id^='stock-']").textContent);

        inputQuantite.addEventListener("input", function () {
            let quantiteSaisie = parseInt(this.value);

            if (isNaN(quantiteSaisie) || quantiteSaisie < 1) {
                this.value = 1;
                quantiteSaisie = 1;
            }

            if (quantiteSaisie > stockDisponible) {
                alert("La quantité demandée dépasse le stock disponible !");
                this.value = stockDisponible;
                quantiteSaisie = stockDisponible;
            }

            boutonAjouter.disabled = quantiteSaisie > stockDisponible;
        });

        form.addEventListener("submit", function (event) {
            let quantiteSaisie = parseInt(inputQuantite.value);

            if (quantiteSaisie > stockDisponible) {
                alert("Impossible d'ajouter cette quantité au panier.");
                event.preventDefault();
            }
        });
    });
});
</script>


							{% endif %}
						</div>
					</div>
				</div>
			{% else %}
				<div class="col-12 text-center text-muted">
					<p>Aucun produit trouvé.</p>
				</div>
			{% endfor %}
			<!-- Pagination -->
<div class="pagination">
    {{ knp_pagination_render(produits) }}
</div>

		</div>
	</div>
{% endblock %}
